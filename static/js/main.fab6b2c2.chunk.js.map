{"version":3,"sources":["redux/dialogsReducer.ts","components/common/Preloader/Preloader.module.css","components/common/Button/Button.module.css","components/Profile/Posts/Post/Post.module.css","components/Friends/Friend/Friend.module.css","components/common/Button/Button.jsx","api/api.ts","components/Nav/Nav.jsx","utils/validators/validators.js","redux/profileReducer.ts","assets/images/loader.svg","components/common/Preloader/Preloader.jsx","assets/images/topImg.jpg","assets/images/defaultAvatar.jpg","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/common/FormControls/FormControls.jsx","components/Profile/Posts/NewPost/NewPost.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.tsx","hoc/withAuthRedirect.tsx","redux/authReducer.ts","components/Profile/ProfileContainer.tsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Friends/Friend/Friend.jsx","components/Friends/Friends.jsx","assets/images/logo.svg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/appReducer.ts","redux/friendsReducer.js","redux/usersReducer.ts","redux/store.ts","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","utils/selectors/selectors.ts","components/Users/UsersContainer.jsx","hoc/withSuspense.tsx","App.js","index.js","components/Nav/Nav.module.css","components/common/FormControls/FormControls.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/Posts/NewPost/NewPost.module.css"],"names":["actionTypes","initialState","sendersData","id","name","avatar","messagesData","senderId","receiverId","text","dialogsReducer","state","action","type","sender","receiver","message","sendMessage","module","exports","Button","props","onClick","className","s","button","ResultCodes","Nav","to","activeClassName","navClasses","active","max","axiosInstance","axios","create","baseURL","withCredentials","headers","usersApi","pageSize","currentPage","get","then","response","data","findText","follow","post","delete","authApi","email","password","rememberMe","profileApi","status","put","postsData","profileInfoData","isFetching","setStatus","toggleFetching","Preloader","preloader","src","loader","alt","ProfileStatus","useState","editMode","setEditMode","useEffect","toggleEditMode","updateStatus","autoFocus","value","onBlur","onChange","e","currentTarget","onDoubleClick","ProfileInfo","topImg","profile","photos","large","defaultAvatar","title","fullName","logout","required","FormControls","input","meta","child","error","touched","formControl","Input","maxLength10","length","NewPost","newPost","onSubmit","handleSubmit","Field","component","placeholder","validate","buttonWrapper","reduxForm","form","Post","postClasses","Posts","posts","map","item","reverse","formData","addPost","postText","connect","Profile","profileInfo","PostsContainer","withAuthRedirect","Component","isAuth","auth","login","setUser","dispatch","a","resultCode","Success","compose","getProfile","getStatus","withRouter","match","params","News","Music","Settings","Friend","friendClasses","friend","firstName","surname","Friends","friendsData","Header","logo","HeaderContainer","this","LoginForm","Login","initialized","usersData","totalUsersCount","followingInProgress","usersReducer","userId","followed","pageNumber","count","isFollowing","filter","setUsers","setCurrentPage","setTotalUsersCount","toggleFollowingProgress","writeFindText","rootReducer","combineReducers","app","newPostText","x","postId","dialogs","users","friends","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","Paginator","pagesCount","changePage","pages","styled","span","pop","push","i","Users","toggleFollowing","find","style","user","disabled","some","target","nav","getUsersData","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getFindText","getIsFetching","getFollowingInProgress","UsersContainer","componentDidMount","getUsers","Math","ceil","items","totalCount","withSuspense","fallback","Dialogs","React","lazy","App","initiailzeApp","path","render","AppContainer","promise","Promise","all","MainApp","StrictMode","getState","bind","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fab6b2c2.chunk.js","sourcesContent":["type User = {\r\n    id: number,\r\n    name: string,\r\n    avatar: string\r\n}\r\ntype Message = {\r\n    id: number,\r\n    senderId: number,\r\n    receiverId: number,\r\n    text: string\r\n}\r\ntype InitialStateType = {\r\n    sendersData: User[],\r\n    messagesData: Message[]\r\n}\r\ntype SendMessageActionType = {\r\n    type: typeof actionTypes.sendMessage,\r\n    message: string\r\n}\r\n\r\nconst actionTypes = {\r\n    sendMessage: 'SEND_MESSAGE',\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n    sendersData: [\r\n        { id: 1, name: 'Saber', avatar: 'https://sun9-38.userapi.com/impg/3qV6CsDQFrvAyuxIjVaS0byAvupKqPeoedq9rA/vh5FmTbwXqI.jpg?size=1077x1080&quality=96&sign=2d6c44aac83eff97da8a839437f223e5&type=album' },\r\n        { id: 2, name: 'Reechka', avatar: 'https://sun9-60.userapi.com/impg/S26Ob2ZUtOe969MNMNA-YfTkvBEPX4rCLM2ppQ/9h9QPrUTWOc.jpg?size=1080x1035&quality=96&sign=0315f01c9fda4ba66c5ffdc1df62200a&type=album' },\r\n        { id: 3, name: 'Gats', avatar: 'https://sun9-27.userapi.com/impg/c857036/v857036066/17d27d/yT-CcAdWjDs.jpg?size=620x630&quality=96&sign=4a3eb8f6659a7a18cb37e3a4790f7a67&type=album' },\r\n        { id: 4, name: 'Archer', avatar: 'https://sun9-68.userapi.com/impg/12EYl0H74Hwiw95LDIs7HfrcsBva63QR2xf3aw/laaW_OYil8I.jpg?size=627x564&quality=96&sign=66c38dbd91ea9d142994527ecfeb7d29&type=album' },\r\n        { id: 5, name: 'Kaworu', avatar: 'https://sun9-46.userapi.com/impf/_43O2WhGHD4dliGJDBcN1Dux9S_WdBsNCeXEGQ/ZOFx1FsBQV0.jpg?size=500x500&quality=96&sign=408e9ffa797e0b951fd90645bc0f8950&type=album' }\r\n    ],\r\n    messagesData: [\r\n        { id: 1, senderId: 0, receiverId: 1, text: 'Вы вновь со мной, туманные виденья, мне в юности мелькнувшие давно. Вас ль удержу во власти вдохновенья, былым ли снам явиться вновь дано. Из сумрака, из тьмы полузабвенной восстали вы. О, будь что суждено' },\r\n        { id: 2, senderId: 1, receiverId: 0, text: 'I am the bone of my sword' },\r\n        { id: 3, senderId: 0, receiverId: 1, text: 'Steel is my body and fire is my blood' },\r\n        { id: 4, senderId: 0, receiverId: 1, text: 'I have created over a thouthands blades' },\r\n        { id: 5, senderId: 1, receiverId: 0, text: 'Unknow to death' },\r\n        { id: 6, senderId: 1, receiverId: 0, text: 'Not know to life' },\r\n        { id: 1, senderId: 0, receiverId: 1, text: 'Вы вновь со мной, туманные виденья, мне в юности мелькнувшие давно. Вас ль удержу во власти вдохновенья, былым ли снам явиться вновь дано. Из сумрака, из тьмы полузабвенной восстали вы. О, будь что суждено' },\r\n        { id: 2, senderId: 1, receiverId: 0, text: 'I am the bone of my sword' },\r\n        { id: 3, senderId: 0, receiverId: 1, text: 'Steel is my body and fire is my blood' },\r\n        { id: 4, senderId: 0, receiverId: 1, text: 'I have created over a thouthands blades' },\r\n        { id: 5, senderId: 1, receiverId: 0, text: 'Unknow to death' },\r\n        { id: 6, senderId: 1, receiverId: 0, text: 'Not know to life' },\r\n        { id: 1, senderId: 0, receiverId: 1, text: 'Вы вновь со мной, туманные виденья, мне в юности мелькнувшие давно. Вас ль удержу во власти вдохновенья, былым ли снам явиться вновь дано. Из сумрака, из тьмы полузабвенной восстали вы. О, будь что суждено' },\r\n        { id: 2, senderId: 1, receiverId: 0, text: 'I am the bone of my sword' },\r\n        { id: 3, senderId: 0, receiverId: 1, text: 'Steel is my body and fire is my blood' },\r\n        { id: 4, senderId: 0, receiverId: 1, text: 'I have created over a thouthands blades' },\r\n        { id: 5, senderId: 1, receiverId: 0, text: 'Unknow to death' },\r\n        { id: 6, senderId: 1, receiverId: 0, text: 'Not know to life' },\r\n        { id: 1, senderId: 0, receiverId: 1, text: 'Вы вновь со мной, туманные виденья, мне в юности мелькнувшие давно. Вас ль удержу во власти вдохновенья, былым ли снам явиться вновь дано. Из сумрака, из тьмы полузабвенной восстали вы. О, будь что суждено' },\r\n        { id: 2, senderId: 1, receiverId: 0, text: 'I am the bone of my sword' },\r\n        { id: 3, senderId: 0, receiverId: 1, text: 'Steel is my body and fire is my blood' },\r\n        { id: 4, senderId: 0, receiverId: 1, text: 'I have created over a thouthands blades' },\r\n        { id: 5, senderId: 1, receiverId: 0, text: 'Unknow to death' },\r\n        { id: 6, senderId: 1, receiverId: 0, text: 'Not know to life' },\r\n        { id: 1, senderId: 0, receiverId: 1, text: 'Вы вновь со мной, туманные виденья, мне в юности мелькнувшие давно. Вас ль удержу во власти вдохновенья, былым ли снам явиться вновь дано. Из сумрака, из тьмы полузабвенной восстали вы. О, будь что суждено' },\r\n        { id: 2, senderId: 1, receiverId: 0, text: 'I am the bone of my sword' },\r\n        { id: 3, senderId: 0, receiverId: 1, text: 'Steel is my body and fire is my blood' },\r\n        { id: 4, senderId: 0, receiverId: 1, text: 'I have created over a thouthands blades' },\r\n        { id: 5, senderId: 1, receiverId: 0, text: 'Unknow to death' },\r\n        { id: 6, senderId: 1, receiverId: 0, text: 'Not know to life' },\r\n    ],\r\n};\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.sendMessage:\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {\r\n                    id: 2,\r\n                    sender: 1,\r\n                    receiver: 0,\r\n                    text: action.message\r\n                }],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessage = (message: string): SendMessageActionType => ({\r\n    type: actionTypes.sendMessage,\r\n    message\r\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1LPJL\",\"rotate\":\"Preloader_rotate__3YmdL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1JVR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__23xAg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__2Yc6I\"};","import s from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={s.button}\r\n        >\r\n            {props.text}\r\n        </button>\r\n    );\r\n\r\n}\r\n\r\nexport default Button;","import axios from 'axios'\r\nimport {TProfileInfo} from '../types/types'\r\n\r\n//TODO remove duplication\r\ntype TUser = {\r\n    id: number\r\n    name: string\r\n    status: string | null\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n    followed: boolean\r\n}\r\ntype TUsers = {\r\n    items: TUser[]\r\n    totalCount: number\r\n    error: null | string\r\n}\r\ntype TFollow = {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: object\r\n}\r\ntype TAuth = {\r\n    resultCode: ResultCodes.Success | ResultCodes.Error\r\n    messages: string[],\r\n    data: {\r\n        id: number,\r\n        email: string,\r\n        login: string\r\n    }\r\n}\r\ntype TLogin = {\r\n    resultCode: ResultCodes.Success | ResultCodes.Error\r\n    messages: string[],\r\n    data: {\r\n        userId: number\r\n    }\r\n}\r\ntype TPut = {\r\n    resultCode: ResultCodes.Success | ResultCodes.Error\r\n    messages: string[]\r\n    data: Object\r\n}\r\n\r\nexport enum ResultCodes {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'a1d94230-84f9-401a-8547-9f4808e1cd45'\r\n    }\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsers: (pageSize = 10, currentPage = 1) => {\r\n        return axiosInstance.get<TUsers>(`users?count=${pageSize}&page=${currentPage}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    findUsers: (pageSize = 10, findText = '') => {\r\n        return axiosInstance.get<TUsers>(`users?count=${pageSize}&page=1&term=${findText}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    toggleFollowing: (id: number, follow: boolean) => {\r\n        if (follow) {\r\n            return axiosInstance.post<TFollow>(`follow/${id}`)\r\n                .then(response => response.data)\r\n\r\n        } else {\r\n            return axiosInstance.delete<TFollow>(`follow/${id}`)\r\n                .then(response => response.data)\r\n        }\r\n    },\r\n}\r\n\r\nexport const authApi = {\r\n    setUser: () => {\r\n        return axiosInstance.get<TAuth>(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    login: (email: string, password: string, rememberMe: boolean) => {\r\n        return axiosInstance.post<TLogin>(`auth/login`, {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n\r\n    logout: () => {\r\n        return axiosInstance.delete<TPut>(`auth/login`)\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const profileApi = {\r\n    getProfile: (id: number) => {\r\n        return axiosInstance.get<TProfileInfo>(`profile/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getStatus: (id: number) => {\r\n        return axiosInstance.get<string>(`profile/status/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    updateStatus: (status: string) => {\r\n        return axiosInstance.put<TPut>(`profile/status`, {status})\r\n            .then(response => response.data)\r\n    },\r\n}","import { NavLink, Router } from 'react-router-dom';\r\nimport navClasses from './Nav.module.css';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <NavLink to='/profile' activeClassName={navClasses.active}>Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/dialogs' activeClassName={navClasses.active}>Dialogs</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/users' activeClassName={navClasses.active}>Users</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/news' activeClassName={navClasses.active}>News</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/friends' activeClassName={navClasses.active}>Friends</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/music' activeClassName={navClasses.active}>Music</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/settings' activeClassName={navClasses.active}>Settings</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;","export const required = value => {\r\n    if (!value) {\r\n        return 'field is required'\r\n    }\r\n}\r\n\r\nexport const maxLength = max =>\r\n    value => {\r\n        if (value && value.length > max) {\r\n            return `length must be less then ${max}`\r\n        }\r\n    }","import {profileApi} from '../api/api'\r\nimport { TProfileInfo } from '../types/types'\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk'\r\nimport {TState} from './store'\r\n\r\ntype TPost = {\r\n    id: number,\r\n    avatar: string,\r\n    text: string\r\n}\r\ntype TInitialState = {\r\n    postsData: TPost[],\r\n    profileInfoData: TProfileInfo | null,\r\n    status: string | null,\r\n    isFetching: boolean,\r\n}\r\ntype TAddPostAction = {\r\n    type: typeof actionTypes.addPost,\r\n    text: string\r\n}\r\ntype TSetProfileAction = {\r\n    type: typeof actionTypes.setProfile,\r\n    profileInfo: any\r\n}\r\ntype TSetStatusAction = {\r\n    type: typeof actionTypes.setStatus,\r\n    status: string\r\n}\r\ntype TToggleFetchingAction = {\r\n    type: typeof actionTypes.toggleFetching,\r\n    isFetching: boolean\r\n}\r\ntype TDeletePostAction = {\r\n    type: typeof actionTypes.deletePost,\r\n    postId: number\r\n}\r\ntype TActions = TAddPostAction | TSetProfileAction | TSetStatusAction | TToggleFetchingAction | TDeletePostAction\r\n\r\ntype TThunkResult<T> = ThunkAction<T, TState, undefined, TActions>\r\n\r\n\r\nconst actionTypes = {\r\n    addPost: 'profile/ADD_POST',\r\n    setProfile: 'profile/SET_PROFILE',\r\n    setStatus: 'profile/SET_STATUS',\r\n    toggleFetching: 'profile/TOGGLE_FETCHING',\r\n    deletePost: 'profile/tDELETE_POST'\r\n}\r\n\r\nconst initialState: TInitialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            avatar: 'https://sun9-38.userapi.com/impg/3qV6CsDQFrvAyuxIjVaS0byAvupKqPeoedq9rA/vh5FmTbwXqI.jpg?size=1077x1080&quality=96&sign=2d6c44aac83eff97da8a839437f223e5&type=album',\r\n            text: 'I know that my redemeer lives and that in the end he will stand up on the Earth'\r\n        },\r\n        {\r\n            id: 2,\r\n            avatar: 'https://sun9-60.userapi.com/impg/S26Ob2ZUtOe969MNMNA-YfTkvBEPX4rCLM2ppQ/9h9QPrUTWOc.jpg?size=1080x1035&quality=96&sign=0315f01c9fda4ba66c5ffdc1df62200a&type=album',\r\n            text: 'And after my skeen has been destroyed, yet in my flash I will see God.'\r\n        },\r\n        {\r\n            id: 3,\r\n            avatar: 'https://sun9-27.userapi.com/impg/c857036/v857036066/17d27d/yT-CcAdWjDs.jpg?size=620x630&quality=96&sign=4a3eb8f6659a7a18cb37e3a4790f7a67&type=album',\r\n            text: 'I myself will see him with my own eyes I and now another How my heart yearns within me Amen If you say how we will hound him scince the root of the troubles lives in him you should fear the sword yourself For wrath will bring punishment by the sword And them you will know that there is judment'\r\n        }\r\n    ],\r\n    profileInfoData: null,\r\n    status: null,\r\n    isFetching: true,\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.addPost:\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, {\r\n                    id: 4,\r\n                    avatar: 'https://sun9-68.userapi.com/impg/12EYl0H74Hwiw95LDIs7HfrcsBva63QR2xf3aw/laaW_OYil8I.jpg?size=627x564&quality=96&sign=66c38dbd91ea9d142994527ecfeb7d29&type=album',\r\n                    text: action.text\r\n                }],\r\n                newPostText: ''\r\n            }\r\n\r\n        case actionTypes.setProfile:\r\n            return {\r\n                ...state,\r\n                profileInfoData: action.profileInfo\r\n            }\r\n\r\n        case actionTypes.setStatus:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        case actionTypes.toggleFetching:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case actionTypes.deletePost:\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(x => x.id != action.postId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addPost = (text: string): TAddPostAction => ({\r\n    type: actionTypes.addPost,\r\n    text\r\n})\r\n\r\nexport const setProfile = (profileInfo: any): TSetProfileAction => ({\r\n    type: actionTypes.setProfile,\r\n    profileInfo\r\n})\r\n\r\nexport const setStatus = (status: string): TSetStatusAction => ({\r\n    type: actionTypes.setStatus,\r\n    status,\r\n})\r\n\r\nexport const toggleFetching = (isFetching: boolean): TToggleFetchingAction => ({\r\n    type: actionTypes.toggleFetching,\r\n    isFetching\r\n})\r\n\r\nexport const deletePost = (postId: number): TDeletePostAction => ({\r\n    type: actionTypes.deletePost,\r\n    postId\r\n})\r\n\r\n\r\nexport const getProfile = (id: number): TThunkResult<void> => async (dispatch) => {\r\n    dispatch(toggleFetching(true))\r\n\r\n    const response = await profileApi.getProfile(id)\r\n\r\n    dispatch(setProfile(response))\r\n    dispatch(toggleFetching(false))\r\n}\r\n\r\nexport const getStatus = (id: number): TThunkResult<void> => async (dispatch) => {\r\n    const response = await profileApi.getStatus(id)\r\n    dispatch(setStatus(response))\r\n}\r\n\r\nexport const updateStatus = (status: string): TThunkResult<void> => async (dispatch) => {\r\n    await profileApi.updateStatus(status)\r\n    dispatch(setStatus(status))\r\n}","export default __webpack_public_path__ + \"static/media/loader.6ce24c58.svg\";","import loader from './../../../assets/images/loader.svg';\r\nimport s from './Preloader.module.css';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={loader} alt=\"loader\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;\r\n","export default __webpack_public_path__ + \"static/media/topImg.c14f3116.jpg\";","export default __webpack_public_path__ + \"static/media/defaultAvatar.86ae5868.jpg\";","import React, {useEffect, useState} from 'react'\r\n\r\ntype Props = {\r\n    status: string,\r\n    updateStatus(status: string): void\r\n}\r\n\r\nconst ProfileStatus: React.FC<Props> = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect((): void => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const toggleEditMode = (): void => {\r\n        if (editMode) {\r\n            setEditMode(false)\r\n            props.updateStatus(status)\r\n        } else {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n\r\n    const onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { (editMode) ?\r\n                <input\r\n                    type=\"text\"\r\n                    autoFocus={true}\r\n                    value={status}\r\n                    onBlur={toggleEditMode}\r\n                    onChange={onStatusChange}\r\n                />\r\n                :\r\n                <p onDoubleClick={toggleEditMode}>{status}</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import s from './ProfileInfo.module.css';\r\nimport topImg from './../../../assets/images/topImg.jpg';\r\nimport defaultAvatar from './../../../assets/images/defaultAvatar.jpg';\r\nimport Button from \"../../common/Button/Button\";\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\ntype ProfileInfoProps = {\r\n    fullName: string\r\n    status: string\r\n    photos: {\r\n        large: string | null\r\n    }\r\n    updateStatus(status: string): void\r\n    logout(): void\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoProps) => {\r\n    return (\r\n        <div>\r\n            <div className={s.topImg}>\r\n                <img src={topImg} alt=\"top image\" />\r\n            </div>\r\n\r\n            <div className={s.profile}>\r\n                {\r\n                    (props.photos.large)\r\n                        ?\r\n                        <img src={props.photos.large} alt=\"avatar\" />\r\n                        :\r\n                        <img src={defaultAvatar} alt=\"avatar\" />\r\n                }\r\n\r\n\r\n                <div>\r\n                    <p className={s.title}>{props.fullName}</p>\r\n                    <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <Button text='Logout' onClick={props.logout}></Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import s from './FormControls.module.css';\r\n\r\nexport const FormControls = ({input, meta, child, ...props}) => {\r\n    const error = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${error ? s.error : null}`}>\r\n            <textarea {...input} {...props} />\r\n            <span>{error ? meta.error : null}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Input = ({input, meta, child, ...props}) => {\r\n    const error = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${error ? s.error : null}`}>\r\n            <input {...input} {...props} />\r\n            <span>{error ? meta.error : null}</span>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport s from './NewPost.module.css';\r\nimport Button from './../../../common/Button/Button'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../../utils/validators/validators\";\r\nimport {FormControls} from \"../../../common/FormControls/FormControls\";\r\n\r\nconst maxLength10 = maxLength(10)\r\n\r\nlet NewPost = (props) => {\r\n    return (\r\n        <form className={s.newPost} onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={FormControls}\r\n                name='postText'\r\n                placeholder='Write your post here...'\r\n                validate={[required, maxLength10]}\r\n            />\r\n\r\n            <div className={s.buttonWrapper}>\r\n                <Button text='Create Post'/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nNewPost = reduxForm({\r\n    form: 'newPost'\r\n})(NewPost)\r\n\r\nexport default NewPost\r\n","import postClasses from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={postClasses.post}>\r\n            <img src={props.avatar}></img>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import NewPost from './NewPost/NewPost';\r\nimport Post from './Post/Post';\r\nimport s from './Posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n\r\n    const addPost = (formData) => {\r\n        props.addPost(formData.postText);\r\n    }\r\n\r\n    let posts = props.posts.map(item => (\r\n        <Post\r\n            avatar={item.avatar}\r\n            text={item.text}\r\n        />\r\n    ));\r\n    posts.reverse();\r\n\r\n    return (\r\n        <div>\r\n            <NewPost onSubmit={addPost}/>\r\n            {posts}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;\r\n","import {connect} from \"react-redux\";\r\nimport {addPost} from \"../../../redux/profileReducer\";\r\nimport Posts from \"./Posts\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    posts: state.profile.postsData\r\n});\r\n\r\nexport default connect(mapStateToProps, {addPost})(Posts);","import ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport { TProfileInfo } from '../../types/types'\r\nimport PostsContainer from './Posts/PostsContainer';\r\n\r\ntype ProfileProps = {\r\n    profileInfo: TProfileInfo\r\n    status: string\r\n    updateStatus(status: string): void\r\n    logout(): void\r\n\r\n}\r\n\r\nconst Profile = (props: ProfileProps) => {\r\ndebugger\r\n    return (\r\n        <div>\r\n            <ProfileInfo {...props.profileInfo}  status={props.status} updateStatus={props.updateStatus} logout={props.logout}/>\r\n            <PostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import {Redirect} from \"react-router\"\r\nimport {connect} from \"react-redux\"\r\nimport {TState} from '../redux/store'\r\nimport React from 'react'\r\n\r\nconst withAuthRedirect = (Component: any) => {\r\n\r\n    const WrapperForRedirect: React.FC< {isAuth: boolean} > = (props) => {\r\n        if (!props.isAuth) return <Redirect to='/login' />\r\n\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    const mapStateToProps = (state: TState) => ({\r\n        isAuth: state.auth.isAuth,\r\n    })\r\n\r\n    return connect(mapStateToProps)(WrapperForRedirect)\r\n}\r\n\r\nexport default withAuthRedirect","import {authApi, ResultCodes} from '../api/api'\r\n\r\ntype TInitialState = {\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n}\r\ntype TSetUserAction = {\r\n    type: 'auth/SET_USER',\r\n    data: {\r\n        id: number,\r\n        email: string,\r\n        login: string\r\n    }\r\n}\r\ntype TUnsetUserAction = {\r\n    type: 'auth/UNSET_USER'\r\n}\r\ntype TActions = TSetUserAction | TUnsetUserAction\r\n\r\nconst initialState: TInitialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nexport const authReducer = (state: TInitialState = initialState, action: TActions): TInitialState => {\r\n    switch (action.type) {\r\n        case 'auth/SET_USER':\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true,\r\n            }\r\n\r\n        case 'auth/UNSET_USER':\r\n            return {\r\n                ...state,\r\n                id: null,\r\n                email: null,\r\n                login: null,\r\n                isAuth: false,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUser = (id: number, email: string, login: string): TSetUserAction => ({\r\n    type: 'auth/SET_USER',\r\n    data: {\r\n        id, email, login\r\n    }\r\n})\r\n\r\nexport const unsetUser = (): TUnsetUserAction => ({\r\n    type: 'auth/UNSET_USER'\r\n})\r\n\r\nexport const auth = () => async (dispatch: any) => {\r\n    const response = await authApi.setUser()\r\n\r\n    if (response.resultCode === ResultCodes.Success) {\r\n        const {id, email, login} = response.data\r\n        dispatch(setUser(id, email, login))\r\n    }\r\n}\r\n\r\nexport const login = (login: string, password: string, rememberMe: boolean) => async (dispatch: any) => {\r\n    const response = await authApi.login(login, password, rememberMe)\r\n\r\n    if (response.resultCode === ResultCodes.Success) {\r\n        dispatch(auth())\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    const response = await authApi.logout()\r\n\r\n    if (response.resultCode === ResultCodes.Success) {\r\n        dispatch(unsetUser())\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport {TState} from '../../redux/store'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {getProfile, getStatus, updateStatus} from '../../redux/profileReducer'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport Profile from './Profile'\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\nimport {logout} from '../../redux/authReducer'\r\nimport {TProfileInfo} from '../../types/types'\r\n\r\ntype Props = {\r\n    profileInfo: TProfileInfo\r\n    id: number\r\n    status: string\r\n    isFetching: boolean\r\n    getStatus(userId: number): void\r\n    getProfile(userId: number): void\r\n    updateStatus(status: string): void\r\n    logout(): void\r\n    match: any\r\n}\r\n\r\nconst ProfileContainer: React.FC<Props> = (props) => {\r\n    useEffect(() => {\r\n        let id = props.match.params.id\r\n        if (!id) {\r\n            id = props.id\r\n        }\r\n        props.getStatus(id)\r\n        props.getProfile(id)\r\n    }, [props.match.params.id, props.id])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.isFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <Profile\r\n                        profileInfo={props.profileInfo}\r\n                        status={props.status}\r\n                        updateStatus={props.updateStatus}\r\n                        logout={props.logout}\r\n                    />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: TState) => ({\r\n    profileInfo: state.profile.profileInfoData,\r\n    status: state.profile.status,\r\n    isFetching: state.profile.isFetching,\r\n    id: state.auth.id,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, logout}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import newsClasses from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News here\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;\r\n","import musicClasses from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music here\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;\r\n","import settingsClasses from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n           Settings here \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import friendClasses from './Friend.module.css';\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n        <div className={friendClasses.friend}>\r\n            <img src={props.avatar} alt=\"avatar\"/>\r\n            <p>{props.firstName} {props.surname}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Friend;\r\n","import Friend from './Friend/Friend';\r\nimport friendsClasses from './Friends.module.css';\r\n\r\nconst Friends = (props) => {\r\n    let friendsData = props.state.friendsData.map( (item) => (\r\n        <Friend \r\n            firstName={item.firstName}\r\n            surname={item.surname}\r\n            avatar={item.avatar}\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            { friendsData }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Friends;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport logo from './../../assets/images/logo.svg'\r\nimport {useEffect} from \"react\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header>\r\n\r\n            <div className={s.logo}>\r\n                <img src={logo} alt=\"logo\" />\r\n            </div>\r\n\r\n            <div className={s.title}>\r\n                <p>Unlimited React Works</p>\r\n            </div>\r\n\r\n            <div className={s.login}>\r\n                {\r\n                    props.isAuth\r\n                        ?\r\n                        <div>{props.login}</div>\r\n                        :\r\n                        <NavLink to='/login'>Login</NavLink>\r\n                }\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport { auth } from '../../redux/authReducer'\r\nimport { connect } from 'react-redux';\r\n\r\nclass HeaderContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { auth })(HeaderContainer);\r\n","import s from './Login.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router\";\r\nimport Button from \"../common/Button/Button\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\n\r\nlet LoginForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    type='text'\r\n                    placeholder='login'\r\n                    name='login'\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    type='text'\r\n                    placeholder='password'\r\n                    name='password'\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    type='checkbox'\r\n                    name='rememberMe'\r\n                    component='input'\r\n                />\r\n                remember me\r\n            </div>\r\n            <div>\r\n                <Button text='Login'></Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nLoginForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\n\r\n\r\nlet Login = (props) => {\r\n    const onSubmitHandler = (formData) => {\r\n        props.login(formData.login, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth){\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return <LoginForm onSubmit={onSubmitHandler} />;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nLogin = connect(mapStateToProps, {login})(Login);\r\n\r\nexport default Login;","import {auth} from \"./authReducer\";\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\ntype SetInitializedActionType = {\r\n    type: typeof actionTypes.setInitialized\r\n}\r\n\r\n\r\nconst actionTypes = {\r\n    setInitialized: 'app/SET_INITIALIZED',\r\n}\r\nconst initialState: InitialStateType = {\r\n    initialized: false,\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch(action.type) {\r\n\r\n        case actionTypes.setInitialized:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInitialized = (): SetInitializedActionType => ({\r\n    type: actionTypes.setInitialized\r\n})\r\n\r\nexport const initiailzeApp = () => (dispatch: any) => {\r\n    const promise = dispatch(auth())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(setInitialized())\r\n        })\r\n}","const actionTypes = {\r\n\r\n};\r\n\r\nconst initialState = {\r\n    friendsData: [\r\n        { id: 1, firstName: 'Saber', surname: 'Pendragon', avatar: 'https://sun9-38.userapi.com/impg/3qV6CsDQFrvAyuxIjVaS0byAvupKqPeoedq9rA/vh5FmTbwXqI.jpg?size=1077x1080&quality=96&sign=2d6c44aac83eff97da8a839437f223e5&type=album' },\r\n        { id: 2, firstName: 'Reechka', surname: 'Ayanami', avatar: 'https://sun9-60.userapi.com/impg/S26Ob2ZUtOe969MNMNA-YfTkvBEPX4rCLM2ppQ/9h9QPrUTWOc.jpg?size=1080x1035&quality=96&sign=0315f01c9fda4ba66c5ffdc1df62200a&type=album' },\r\n        { id: 3, firstName: 'Gats', surname: 'Gats', avatar: 'https://sun9-27.userapi.com/impg/c857036/v857036066/17d27d/yT-CcAdWjDs.jpg?size=620x630&quality=96&sign=4a3eb8f6659a7a18cb37e3a4790f7a67&type=album' },\r\n        { id: 4, firstName: 'Archer', surname: 'Emiya', avatar: 'https://sun9-68.userapi.com/impg/12EYl0H74Hwiw95LDIs7HfrcsBva63QR2xf3aw/laaW_OYil8I.jpg?size=627x564&quality=96&sign=66c38dbd91ea9d142994527ecfeb7d29&type=album' },\r\n        { id: 5, firstName: 'Kaworu', surname: 'Nagisa', avatar: 'https://sun9-46.userapi.com/impf/_43O2WhGHD4dliGJDBcN1Dux9S_WdBsNCeXEGQ/ZOFx1FsBQV0.jpg?size=500x500&quality=96&sign=408e9ffa797e0b951fd90645bc0f8950&type=album' }\r\n    ],\r\n};\r\n\r\nexport const friendsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","import {ResultCodes, usersApi} from '../api/api'\r\n\r\ntype User = {\r\n    id: number,\r\n    name: string,\r\n    status: string | null,\r\n    photos: {\r\n        small: string | null,\r\n        large: string | null\r\n    },\r\n    followed: boolean\r\n}\r\ntype InitialStateType = {\r\n    usersData: User[],\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    findText: string,\r\n    isFetching: boolean,\r\n    followingInProgress: number[],\r\n}\r\ntype SetUsersActionType = {\r\n    type: typeof actionTypes.setUsers,\r\n    usersData: User[]\r\n}\r\ntype ToggleFollowingSuccessActionType = {\r\n    type: typeof actionTypes.toggleFollowing,\r\n    userId: number,\r\n    followed: boolean\r\n}\r\ntype SetCurrentPageActionType = {\r\n    type: typeof actionTypes.setCurrentPage,\r\n    pageNumber: number\r\n}\r\ntype SetTotalUsersCountActionType = {\r\n    type: typeof actionTypes.setTotalUsersCount,\r\n    count: number\r\n}\r\ntype ToggleFetchingActionType = {\r\n    type: typeof actionTypes.toggleFetching,\r\n    isFetching: boolean\r\n}\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof actionTypes.toggleFollowingProgress,\r\n    isFollowing: boolean,\r\n    id: number\r\n}\r\ntype WriteFindTextActionType = {\r\n    type: typeof actionTypes.writeFindText,\r\n    text: string\r\n}\r\n\r\n\r\nconst actionTypes = {\r\n    setUsers: 'users/SET_USERS',\r\n    toggleFollowing: 'users/TOGGLE_FOLLOWING',\r\n    setCurrentPage: 'users/SET_CURRENT_PAGE',\r\n    setTotalUsersCount: 'users/SET_TOTAL_USERS_COUNT',\r\n    writeFindText: 'users/WRITE_FIND_TEXT',\r\n    toggleFetching: 'TOGGLE_FETCHING',\r\n    toggleFollowingProgress: 'users/TOGGLE_FOLLOWING_PROGRESS',\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    usersData: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    findText: '',\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case actionTypes.setUsers:\r\n            return {\r\n                ...state,\r\n                usersData: action.usersData\r\n            }\r\n\r\n        case actionTypes.toggleFollowing:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(item => {\r\n                    if (item.id === action.userId) {\r\n                        return {...item, followed: action.followed}\r\n                    }\r\n                    return {...item}\r\n                })\r\n            }\r\n\r\n        case actionTypes.setCurrentPage:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n\r\n        case actionTypes.setTotalUsersCount:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n\r\n        case actionTypes.toggleFetching:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case actionTypes.writeFindText:\r\n            return {\r\n                ...state,\r\n                findText: action.text\r\n            }\r\n\r\n        case actionTypes.toggleFollowingProgress:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowing ?\r\n                    [...state.followingInProgress, action.id]\r\n                    :\r\n                    state.followingInProgress.filter(id => id !== action.id)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default usersReducer\r\n\r\n\r\nexport const setUsers = (usersData: User[]): SetUsersActionType => ({\r\n    type: actionTypes.setUsers,\r\n    usersData\r\n})\r\n\r\nexport const toggleFollowingSuccess = (userId: number, followed: boolean): ToggleFollowingSuccessActionType => ({\r\n    type: actionTypes.toggleFollowing,\r\n    userId,\r\n    followed\r\n})\r\n\r\nexport const setCurrentPage = (pageNumber: number): SetCurrentPageActionType => ({\r\n    type: actionTypes.setCurrentPage,\r\n    pageNumber\r\n})\r\n\r\nexport const setTotalUsersCount = (count: number): SetTotalUsersCountActionType => ({\r\n    type: actionTypes.setTotalUsersCount,\r\n    count\r\n})\r\n\r\nexport const toggleFetching = (isFetching: boolean): ToggleFetchingActionType => ({\r\n    type: actionTypes.toggleFetching,\r\n    isFetching\r\n})\r\n\r\nexport const toggleFollowingProgress = (isFollowing: boolean, id: number): ToggleFollowingProgressActionType => ({\r\n    type: actionTypes.toggleFollowingProgress,\r\n    isFollowing,\r\n    id\r\n})\r\n\r\nexport const writeFindText = (text: string): WriteFindTextActionType => ({\r\n    type: actionTypes.writeFindText,\r\n    text\r\n})\r\n\r\n\r\nexport const getUsers = (pageSize: number, currentPage: number) => async (dispatch: any) => {\r\n    dispatch(toggleFetching(true))\r\n    dispatch(setCurrentPage(currentPage))\r\n\r\n    const response = await usersApi.getUsers(pageSize, currentPage)\r\n\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setTotalUsersCount(response.totalCount))\r\n    dispatch(toggleFetching(false))\r\n}\r\n\r\nexport const toggleFollowing = (id: number, follow: boolean) => async (dispatch: any) => {\r\n\r\n    dispatch(toggleFollowingProgress(true, id))\r\n\r\n    const response = await usersApi.toggleFollowing(id, follow)\r\n\r\n    if (response.resultCode === ResultCodes.Success) {\r\n        dispatch(toggleFollowingSuccess(id, follow))\r\n        dispatch(toggleFollowingProgress(false, id))\r\n    }\r\n}\r\n\r\nexport const find = (pageSize: number, findText: string) => async (dispatch: any) => {\r\n    dispatch(toggleFetching(true))\r\n    dispatch(setCurrentPage(1))\r\n\r\n    const response = await usersApi.findUsers(pageSize, findText)\r\n\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setTotalUsersCount(response.totalCount))\r\n    dispatch(toggleFetching(false))\r\n    dispatch(writeFindText(''))\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { authReducer } from \"./authReducer\"\r\nimport { dialogsReducer } from \"./dialogsReducer\"\r\nimport { friendsReducer } from \"./friendsReducer\"\r\nimport { profileReducer } from \"./profileReducer\"\r\nimport usersReducer from \"./usersReducer\"\r\nimport { reducer as formReducer} from \"redux-form\"\r\nimport {appReducer} from \"./appReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    profile: profileReducer,\r\n    dialogs: dialogsReducer,\r\n    users: usersReducer,\r\n    friends: friendsReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n})\r\n\r\n// redux devtools connect\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store\r\n\r\ntype RootReducer = typeof rootReducer\r\nexport type TState = ReturnType<RootReducer>\r\n","import Button from '../Button/Button'\r\nimport styled from 'styled-components'\r\n\r\nconst Paginator = ({pagesCount, currentPage, changePage}) => {\r\n    const styledSpan = styled.span`\r\n      margin: 0 3px;\r\n      cursor: pointer;\r\n      .current {\r\n        font-weight: 700;\r\n      }\r\n    `\r\n\r\n    let pages = [1, '...']\r\n\r\n    if (currentPage <= 3) pages.pop()\r\n\r\n    if (currentPage < 5) pages.push(2, 3, 4)\r\n\r\n    if (currentPage > pagesCount - 5) pages.push(pagesCount - 3, pagesCount - 2, pagesCount - 1)\r\n\r\n    if (currentPage >= 5 && currentPage <= pagesCount - 5) {\r\n        for (let i = currentPage - 2; i <= currentPage + 2; i++) {\r\n            pages.push(i)\r\n        }\r\n    }\r\n\r\n    if (currentPage < pagesCount - 2) pages.push('...')\r\n    pages.push(pagesCount)\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={() => changePage(currentPage - 1)} text={'<'}/>\r\n            {pages.map(item =>\r\n                <styledSpan\r\n                    className={currentPage === item && 'current'}\r\n                    onClick={() => changePage(item)}\r\n                >\r\n                    {item}\r\n                </styledSpan>)}\r\n            <Button onClick={() => changePage(currentPage + 1)} text={'>'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import style from './Users.module.css';\r\nimport defaultAvatar from './../../assets/images/defaultAvatar.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from '../common/Paginator/Paginator'\r\nimport Button from '../common/Button/Button'\r\n\r\nconst Users = ({currentPage, pagesCount, usersData, followingInProgress, toggleFollowing, findText,\r\n                   writeFindText, find, changePage}) => {\r\n\r\n    // TODO paginator\r\n    const pages = [1, '...'];\r\n    if (currentPage <= 3) pages.pop()\r\n\r\n    if (currentPage < 5) pages.push(2, 3, 4)\r\n\r\n    if (currentPage > pagesCount - 5) pages.push(pagesCount - 3, pagesCount - 2, pagesCount - 1)\r\n\r\n    if (currentPage >= 5 && currentPage <= pagesCount - 5) {\r\n        for (let i = currentPage - 2; i <= currentPage + 2; i++) {\r\n                pages.push(i)\r\n        }\r\n    }\r\n\r\n    if (currentPage < pagesCount - 2) pages.push('...')\r\n    pages.push(pagesCount)\r\n\r\n\r\n    const users = usersData.map(item => {\r\n        return (\r\n            <div className={style.user}>\r\n                <div>\r\n                    <NavLink to={`/profile/${item.id}`}>\r\n                        <img src={item.photos.large ? item.photos.large : defaultAvatar} alt=\"avatar\" />\r\n                    </NavLink>\r\n                    {\r\n                        item.followed ?\r\n                            <Button\r\n                                disabled={followingInProgress.some(id => id === item.id)}\r\n                                onClick={() => {toggleFollowing(item.id, false)}}\r\n                                text={'Unfollow'}\r\n                            />\r\n                            :\r\n                            <Button\r\n                                disabled={followingInProgress.some(id => id === item.id)}\r\n                                onClick={() => {toggleFollowing(item.id, true)}}\r\n                                text={'Follow'}\r\n                            />\r\n\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    <p>{item.name}</p>\r\n                    <p className={style.status}>{item.status ? item.status : 'default status'}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={style.users}>\r\n\r\n            <div>\r\n                <input\r\n                    value={findText}\r\n                    onChange={(e) => writeFindText(e.target.value)}\r\n                    placeholder='Search...'\r\n                />\r\n                <Button onClick={find} text={'Find'}/>\r\n            </div>\r\n\r\n            <div className={style.nav}>\r\n                <Paginator currentPage={currentPage} pagesCount={pagesCount} changePage={changePage} />\r\n            </div>\r\n\r\n            {users}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;\r\n","import {createSelector} from 'reselect'\r\nimport {TState} from '../../redux/store'\r\n\r\nconst getUsersDataSelector = (state: TState) => state.users.usersData\r\n\r\nexport const getUsersData = createSelector(getUsersDataSelector, (usersData) => {\r\n    return usersData.filter(x => true)\r\n})\r\n\r\nexport const getPageSize = (state: TState) => state.users.pageSize\r\n\r\nexport const getTotalUsersCount = (state: TState) => state.users.totalUsersCount\r\n\r\nexport const getCurrentPage = (state: TState) => state.users.currentPage\r\n\r\nexport const getFindText = (state: TState) => state.users.findText\r\n\r\nexport const getIsFetching = (state: TState) => state.users.isFetching\r\n\r\nexport const getFollowingInProgress = (state: TState) => state.users.followingInProgress","import { connect } from \"react-redux\"\r\nimport { Component } from 'react'\r\nimport {\r\n    setCurrentPage, setTotalUsersCount,\r\n    setUsers, toggleFetching,\r\n    writeFindText, toggleFollowingProgress, getUsers,\r\n    find, toggleFollowing\r\n} from \"../../redux/usersReducer\"\r\nimport Users from './Users'\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\"\r\nimport {compose} from \"redux\"\r\nimport {\r\n    getCurrentPage,\r\n    getFindText, getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersData\r\n} from \"../../utils/selectors/selectors\"\r\n\r\nclass UsersContainer extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.getUsers(this.props.pageSize, this.props.currentPage)\r\n    }\r\n\r\n    changePage = (pageNumber) => {\r\n        if (pageNumber >= 1 && pageNumber <= this.pagesCount) {            \r\n            this.props.getUsers(this.props.pageSize, pageNumber)\r\n        }\r\n    }\r\n\r\n    find = () => {\r\n        if (this.props.findText) {\r\n            this.props.find(this.props.pageSize, this.props.findText)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize)\r\n        return (\r\n            <div> {\r\n                this.props.isFetching\r\n                    ?\r\n                    <Preloader />\r\n                    :\r\n                    <Users\r\n                        usersData={this.props.usersData}\r\n                        totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        pagesCount={this.pagesCount}\r\n                        currentPage={this.props.currentPage}\r\n                        followingInProgress={this.props.followingInProgress}\r\n                        findText={this.props.findText}\r\n                        toggleFollowing={this.props.toggleFollowing}\r\n                        changePage={this.changePage}\r\n                        writeFindText={this.props.writeFindText}\r\n                        find={this.find}\r\n                        toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                    />\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersData: getUsersData(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        findText: getFindText(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUsers, setCurrentPage,\r\n        setTotalUsersCount, toggleFetching, writeFindText,\r\n        toggleFollowingProgress, getUsers, find,\r\n        toggleFollowing,\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n\r\n","import {Suspense} from 'react'\r\nimport Preloader from '../components/common/Preloader/Preloader'\r\n\r\nconst withSuspense = (Component: any) => {\r\n    return (props: Object) => {\r\n        return (\r\n            <Suspense fallback={<Preloader />}>\r\n                <Component {...props}/>\r\n            </Suspense>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withSuspense","import './App.css'\nimport Nav from './components/Nav/Nav'\nimport ProfileContainer from './components/Profile/ProfileContainer'\nimport News from './components/News/News'\nimport Music from './components/Music/Music'\nimport Settings from './components/Settings/Settings'\nimport Friends from './components/Friends/Friends'\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport Login from './components/Login/Login'\nimport React, {Component} from 'react'\nimport {connect, Provider} from 'react-redux'\nimport {compose} from 'redux'\nimport {withRouter} from 'react-router'\nimport Preloader from './components/common/Preloader/Preloader'\nimport {initiailzeApp} from './redux/appReducer'\nimport store from './redux/store'\nimport UsersContainer from './components/Users/UsersContainer'\nimport withSuspense from './hoc/withSuspense'\n\n//import Dialogs from \"./components/Dialogs/Dialogs\";\nconst Dialogs = React.lazy(() => import('./components/Dialogs/Dialogs'))\n\n\nclass App extends Component {\n    componentDidMount = () => {\n        this.props.initiailzeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"wrapper\">\n                <HeaderContainer/>\n                <Nav/>\n                <main>\n                    <Route path=\"/profile/:id?\" render={() => <ProfileContainer/>}/>\n                    <Route path=\"/dialogs\" render={withSuspense(() =>\n                        <Dialogs\n                            state={this.props.state.dialogs}\n                            dispatch={this.props.dispatch}\n                        />\n                    )}/>\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/news\" render={() => <News/>}/>\n                    <Route path=\"/friends\" render={() => <Friends state={this.props.state.friends}/>}/>\n                    <Route path=\"/music\" render={() => <Music/>}/>\n                    <Route path=\"/settings\" render={() => <Settings/>}/>\n                    <Route path=\"/login\" render={() => <Login/>}/>\n                </main>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initiailzeApp})\n)(App)\n\nconst MainApp = () => {\n    return (\n        <React.StrictMode>\n            <BrowserRouter>\n                <Provider store={store}>\n                    <AppContainer\n                        state={store.getState()}\n                        dispatch={store.dispatch.bind(store)}\n                    />\n                </Provider>\n            </BrowserRouter>\n        </React.StrictMode>\n    )\n}\n\nexport default MainApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App'\n\nReactDOM.render(<MainApp/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Nav_active__2Uqzb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__14S0d\",\"error\":\"FormControls_error__1at_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Users_user__3zIhh\",\"status\":\"Users_status__baCSw\",\"nav\":\"Users_nav__rkIdD\",\"users\":\"Users_users__3c9jd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__ZUz0T\",\"topImg\":\"ProfileInfo_topImg__2cF-9\",\"title\":\"ProfileInfo_title__2Ki8p\",\"status\":\"ProfileInfo_status__2en78\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__1eWAM\",\"logo\":\"Header_logo__1Yra5\",\"login\":\"Header_login__xoLnL\",\"rotate\":\"Header_rotate__5dG48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"NewPost_newPost__1FhWB\",\"buttonWrapper\":\"NewPost_buttonWrapper__W2eTx\"};"],"sourceRoot":""}